<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CodeForces-1247B2 TV Subscriptions (Hard Version)</title>
      <link href="/2019/10/30/CF1247B2/"/>
      <url>/2019/10/30/CF1247B2/</url>
      
        <content type="html"><![CDATA[<p><strong>传送门：</strong><a href="https://codeforces.com/contest/1247/problem/B2" target="_blank" rel="noopener">CodeForces - 1247B2</a></p><h2 id="一-题目描述"><a href="#一-题目描述" class="headerlink" title="一. 题目描述"></a>一. 题目描述</h2><p>The only difference between easy and hard versions is constraints.</p><p>The BerTV channel every day broadcasts one episode of one of the k TV shows. You know the schedule for the next n days: a sequence of integers a1,a2,…,an $(1≤a_i≤k)$, where ai is the show, the episode of which will be shown in i-th day.</p><p>The subscription to the show is bought for the entire show (i.e. for all its episodes), for each show the subscription is bought separately.</p><p>How many minimum subscriptions do you need to buy in order to have the opportunity to watch episodes of purchased shows d (1≤d≤n) days in a row? In other words, you want to buy the minimum number of TV shows so that there is some segment of d consecutive days in which all episodes belong to the purchased shows.</p><a id="more"></a><h2 id="二-输入描述"><a href="#二-输入描述" class="headerlink" title="二. 输入描述"></a>二. 输入描述</h2><p>The first line contains an integer t $(1≤t≤10000)$ — the number of test cases in the input. Then t test case descriptions follow.</p><p>The first line of each test case contains three integers n,k and d $(1≤n≤2⋅10^5$, $1≤k≤10^6$, $1≤d≤n)$. The second line contains n integers $a_1$,$a_2$,…,$a_n$ $(1≤a_i≤k)$, where ai is the show that is broadcasted on the i-th day.</p><p>It is guaranteed that the sum of the values ​​of n for all test cases in the input does not exceed $2⋅10^5$.</p><h2 id="三-输出描述"><a href="#三-输出描述" class="headerlink" title="三. 输出描述"></a>三. 输出描述</h2><p>Print t integers — the answers to the test cases in the input in the order they follow. The answer to a test case is the minimum number of TV shows for which you need to purchase a subscription so that you can watch episodes of the purchased TV shows on BerTV for d consecutive days. Please note that it is permissible that you will be able to watch more than d days in a row.</p><h2 id="四-题意分析"><a href="#四-题意分析" class="headerlink" title="四. 题意分析"></a>四. 题意分析</h2><p>求长度为D的区间内的最小元素种类数</p><h2 id="五-样例输入"><a href="#五-样例输入" class="headerlink" title="五. 样例输入"></a>五. 样例输入</h2><pre><code>45 2 21 2 1 2 19 3 33 3 3 2 2 2 1 1 14 10 410 8 6 416 9 83 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3</code></pre><h2 id="六-样例输出"><a href="#六-样例输出" class="headerlink" title="六. 样例输出"></a>六. 样例输出</h2><pre><code>2145</code></pre><h2 id="七-AC代码"><a href="#七-AC代码" class="headerlink" title="七. AC代码"></a>七. AC代码</h2><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> maxn<span class="token operator">=</span><span class="token number">1e6</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">const</span> ll mod<span class="token operator">=</span><span class="token number">1e9</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span>mii p<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> t<span class="token punctuation">,</span>i<span class="token punctuation">;</span>    cin<span class="token operator">>></span>t<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>t<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        p<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n<span class="token punctuation">,</span>k<span class="token punctuation">,</span>d<span class="token punctuation">,</span>f<span class="token punctuation">,</span>ma<span class="token operator">=</span><span class="token number">1000000</span><span class="token punctuation">;</span>        cin<span class="token operator">>></span>n<span class="token operator">>></span>k<span class="token operator">>></span>d<span class="token punctuation">;</span>        <span class="token keyword">int</span> cnt<span class="token operator">=</span>d<span class="token punctuation">;</span>        <span class="token keyword">int</span> sum<span class="token operator">=</span>n<span class="token operator">-</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            p<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">>=</span>d<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> x<span class="token operator">=</span>p<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                ma<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>ma<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span>p<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> p<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        cout<span class="token operator">&lt;&lt;</span>ma<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
